type Extra {
  _id: ID
  name: String!
  price: Int!
}

type Side {
  _id: ID
  name: String!
  price: Int!
}

type Food {
  # _id is the way to save an ID in GraphQL, ID is the "type"
  _id: ID
  name: String!
  # the ! means IT IS REQUIRED IN THE MODEL(required: true)
  price: Int!
  shift:Boolean!
}

type Drink {
  _id: ID
  name: String!
  price: Int!
}

type Order {
  _id: ID
  food: [Food]!
  drink: [Drink]!
  extra: [Extra]
  side: [Side]
  total: Int!
  table: Int
  client: String
  employee: User!
}

type User {
  _id: ID
  username: String! @unique
  password: String!
}

type Token {
  token: String!
}

type Query {
  getUser: User
  getExtraList: [Extra]!
  getSideList: [Side]!
  getDrinkList: [Drink]!
  getFoodList: [Food]!
  getOrderList: [Order]!
}

type Mutation {
  addDrink(
    name: String!
    price: Int!
    ): Drink!
  addExtra(
    name: String!
    price: Int!
  ): Extra!
  addSide(
    name: String!
    price: Int!
  ): Side!
  addFood(
    name: String!
    price: Int!
    shift: Boolean!
  ): Food!
  addOrder(
    food: ID!
    drink: ID!
    extra: [ID]
    side: [ID]
    total: Int!
    table: Int
    client: String
    employee: ID!
  ): Order!
  signupUser(
    username: String!
    password: String!
  ): Token
  # cambiar User por Token
  signInUser(
    username: String!
    password: String!
  ): Token
}